const { Router } = require('express');
const router = Router();

// DB Conection
var mysql = require('mysql');

var conexion = mysql.createConnection({
    host: 'localhost',
    database: 'todooficios',
    user: 'root',
    password: 'root',
});

conexion.connect(function (err) {
    if (err) {
        console.error('Error de conexion: ' + err.stack);
        return;
    }
    console.log('Conectado con el identificador ' + conexion.threadId);
});

router.get('/trabajadores', (req, res) => {
    conexion.query(`SELECT t.idTrabajador, t.nombreTrabajador, t.apellidoTrabajador, t.dni, t.direccion, t.distrito, t.telefono, t.sobreMi, t.correo, json_arrayagg(json_object('id', e.idEspecialidad,'nombre', e.nombreEspecialidad)) AS especialidades
    FROM trabajador_especialidad te
    JOIN trabajador t ON te.idTrabajador = t.idTrabajador
    JOIN especialidad e ON te.idEspecialidad = e.idEspecialidad
    GROUP BY t.idTrabajador`, function (error, results, fields) {
        if (error)
            throw error;

        res.json(results);
    });
});

router.post('/trabajadores', (req, res) => {
    const { nombreTrabajador, apellidoTrabajador, dni, direccion, distrito, telefono, especialidades, sobreMi, correo } = req.body;

    if (nombreTrabajador && apellidoTrabajador && dni && direccion && distrito && telefono && especialidades && sobreMi && correo) {

        conexion.query(`SELECT * FROM trabajador WHERE dni = "` + dni + '"', function (error, results, fields) {
            if (error) {
                throw error;
            }

            if (results.length != 0) {
                var idTrabajador = results[0].idTrabajador;

                // Validar que no exista la especialidad seleccionada

                var arrEspecialidadesIds = [];
                var strEspecialidadesIds = '';

                for (var i = 0; i < especialidades.length; i++) {
                    var id = especialidades[i].idEspecialidad;
                    arrEspecialidadesIds.push(especialidades[i].idEspecialidad);
                    strEspecialidadesIds += id + ',';
                }

                strEspecialidadesIds = strEspecialidadesIds.substring(0, strEspecialidadesIds.length - 1);

                conexion.query('SELECT * FROM trabajador_especialidad WHERE idTrabajador = "' + idTrabajador + '"', function (error, results2, fields) {
                    if (error) {
                        throw error;
                    }

                    console.log('arrEspecialidadesIds: ' + arrEspecialidadesIds);

                    console.log('results2: ' + JSON.stringify(results2));

                    var ArrEspecialidadesPorCrear = [];

                    // Recorre Especialidades Registradas

                    for (var i = 0; i < arrEspecialidadesIds.length; i++) {
                        for (var j = 0; j < results2.length; j++) {
                            if (results2[j].idEspecialidad == arrEspecialidadesIds[i]) {
                                break;
                            }

                            if (j == results2.length - 1) {
                                ArrEspecialidadesPorCrear.push(arrEspecialidadesIds[i]);
                            }
                        }
                    }

                    console.log('ArrEspecialidadesPorCrear: ' + ArrEspecialidadesPorCrear);

                    if (ArrEspecialidadesPorCrear.length != 0) {
                        conexion.query('INSERT INTO trabajador (nombreTrabajador, apellidoTrabajador, dni, direccion, distrito, telefono, sobreMi, correo) VALUES("' + nombreTrabajador + '", "' + apellidoTrabajador + '", "' + dni + '", "' + direccion + '", "' + distrito + '", "' + telefono + '", "' + sobreMi + '", "' + correo + '")', function (error, results) {
                            if (error) {
                                throw error;
                            }

                            for (var i = 0; i < ArrEspecialidadesPorCrear.length; i++) {
                                conexion.query('INSERT INTO trabajador_especialidad (idTrabajador, idEspecialidad) VALUES("' + idTrabajador + '", "' + ArrEspecialidadesPorCrear[i] + '")', function (error, results) {
                                    if (error) {
                                        throw error;
                                    }

                                    console.log('creado');

                                    //res.send({ message: 'Received' })
                                });
                            }

                            res.send({ message: 'Se crearon las especialidades para el trabajador.' })
                        });
                    } else {
                        if (especialidades.length == 1) {
                            res.status(400).send({ message: 'Ya existe el trabajador con esa especialidad.' });
                        } else {
                            res.status(400).send({ message: 'Ya existe el trabajador con esas especialidades.' });
                        }
                    }
                });
            } else {
                conexion.query('INSERT INTO trabajador (nombreTrabajador, apellidoTrabajador, dni, direccion, distrito, telefono, sobreMi, correo) VALUES("' + nombreTrabajador + '", "' + apellidoTrabajador + '", "' + dni + '", "' + direccion + '", "' + distrito + '", "' + telefono + '", "' + sobreMi + '", "' + correo + '")', function (error, results) {
                    if (error) {
                        throw error;
                    }

                    var insertId = results.insertId;

                    for (var i = 0; i < especialidades.length; i++) {
                        conexion.query('INSERT INTO trabajador_especialidad (idTrabajador, idEspecialidad) VALUES("' + insertId + '", "' + especialidades[i].idEspecialidad + '")', function (error, results) {
                            if (error) {
                                throw error;
                            }
                        });
                    }
                    res.send({ message: 'Se crearon las especialidades para el trabajador.' })
                });
            }
        });
    } else {
        res.send('Failed');
    }
});

router.get('/trabajadores/:id', (req, res) => {
    console.log(req.params);

    conexion.query("SELECT t.*, d.nombreDistrito, "+
        "json_arrayagg(json_object('id', e.idEspecialidad,'nombre', e.nombreEspecialidad)) AS especialidades " +
        "FROM trabajador t "+ 
        "JOIN trabajador_especialidad te ON te.idTrabajador = t.idTrabajador " + 
        "JOIN especialidad e ON te.idEspecialidad = e.idEspecialidad " +
        'JOIN distrito d ON d.idDistrito = t.distrito ' + 
        'WHERE t.idTrabajador = ' + req.params.id, function (error, results, fields) {
            if (error)
                throw error;

            res.json(results);
        });
});

router.get('/trabajadoresEspecialidad/:id', (req, res) => {
    console.log(req.params);
    conexion.query('SELECT e.* FROM todooficios.especialidad e JOIN todooficios.trabajador_especialidad te ON te.idEspecialidad = e.idEspecialidad'
        + ' WHERE idTrabajador = ' + req.params.id, function (error, results, fields) {
            if (error)
                throw error;

            res.json(results);
        });
});

router.get('/trabajadores/:id/proyectos', (req, res) => {
    conexion.query('SELECT p.*, c.nombreCliente, e.nombreEspecialidad ' + 
        "FROM proyecto p " +
        'JOIN cliente c ON c.idCliente = p.idCliente ' +
        'JOIN especialidad e ON e.idEspecialidad = p.especialidad ' +
        'WHERE p.idTrabajador = ' + req.params.id, function(error, results, fields) {
        if (error)
            throw error;

        res.json(results);
    });
});

router.get('/trabajadoresLogin/:email/:password', (req, res) => {
    console.log(req.params);

    console.log('req.params.email: ' + req.params.email);
    console.log('req.params.password: ' + req.params.password);

    conexion.query('SELECT * FROM trabajador WHERE correo = "' + req.params.email + '" AND password = "' + req.params.password + '"', function (error, results, fields) {
        if (error){
            throw error;
        }

        res.json(results);
    });
});

module.exports = router;